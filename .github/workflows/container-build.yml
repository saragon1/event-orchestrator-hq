name: Build and Push Container

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.simple
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  build-arm7:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up QEMU for ARMv7
#        uses: docker/setup-qemu-action@v2
#        with:
#          platforms: 'linux/arm'
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and push ARMv7 image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./Dockerfile.simple
#          platforms: linux/arm/v7
#          push: true
#          tags: |
#            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-armv7
#          cache-from: type=gha
#          cache-to: type=gha,mode=max

  manifest:
    #needs: [ build-amd64, build-arm64, build-arm7 ]
    needs: [ build-amd64, build-arm64 ]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          # Crea manifest list e pusha
          docker manifest create "$IMAGE" \
            "$IMAGE-amd64" \
            "$IMAGE-arm64"
           # "$IMAGE-armv7"
          docker manifest push "$IMAGE"
